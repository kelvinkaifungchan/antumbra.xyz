require("dotenv").config();
const ArticleService = require("../articleService")
const knexConfig = require("../../knexfile").development
const knex = require("knex")(knexConfig)

describe("Article service tests", () => {

    test("List article from database", () => {
        const articleService = new ArticleService(knex)
        const attachments = [{
          id: 1,
          attachmentLink: 'https://google.com',
          attachmentType: 'text'
        }]
        const tags = [{
          id: 1,
          tag: 'infrastructure'
        }, {
          id: 2,
          tag: 'urbanisation'
        }]
        return articleService
          .article(1)
          .then((data) => {expect(data).toEqual({
            type: "text",
            author: "Tiziana Terranova and Ravi Sundaram",
            title: "Colonial Infrastructures and Techno-social Networks",
            subtitle: "The techno-social is the form of the social that comes after its end. It is neither a virtual nor a global digital community, but a component of the milieu generated by a new technical beingâ€”the digital computational network.",
            moduleType:"1",
            heroImage:"https://google.com",
            datePublished: "27th February 2021",
            attachments: attachments,
            tags: tags
          })})
          .catch((err) => {
            console.log(err)
          })
      })
    
    test("Adding article from database", () => {
        const articleService = new ArticleService(knex)
        const body = {
            type: "text",
            author: "Writer",
            title: "Test",
            subtitle: "This is a test article",
            moduleType: "1",
            heroImage: "https://divisare-res.cloudinary.com/images/c_limit,f_auto,h_2000,q_auto,w_3000/v1530094737/yjenzxdsg8ciqrteg0ad/office-kersten-geers-david-van-severen-bas-princen-incubator.jpg",
            datePublished: "19th April 2021",
        }
        return articleService
        .add(body)
        .then((data) => {expect(data).toEqual(4)})
        .catch((err) => {
            console.log(err)
        })
    })
})